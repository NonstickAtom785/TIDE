menu_prgm_header:
  .db 3
  .db "Control>",0
  .db "<I/O>",0
  .db "<Exec",0
menu_prgm:
  jr c,menu_prgm_select
menu_prgm_get:
; scf     ;means out-of-bounds
;A is the header
;HL is the index
  dec b
  inc b
  scf
  ret nz

  ld hl,menu_prgm_1
  dec a
  jr z,+_
  ld hl,menu_prgm_2
  dec a
  jr z,+_
  ld hl,menu_prgm_0
_:
  ld a,c
  cp (hl)
  ccf
  ret c
  inc hl
  add hl,bc
  add hl,bc
  ld de,OP1
  ldi
  ldi
  ld hl,OP1
  call get_tok_str
  ex de,hl
  or a
  ret

menu_prgm_select:
  dec b
  inc b
  jp nz,menu_get_select_err

  ld hl,menu_prgm_1
  dec a
  jr z,+_
  ld hl,menu_prgm_2
  dec a
  jr z,+_
  ld hl,menu_prgm_0
_:
  ld a,c
  cp (hl)
  jp nc,menu_get_select_err
  inc bc
  add hl,bc
  add hl,bc

;HL points to the second byte of the token
  xor a
  ld de,OP1+5
  ld (de),a
  dec de
  cp (hl)
  ldd
  ldd
  ld bc,1
  ld (de),a
  dec de
  adc a,c
  ld (de),a
  ex de,hl
  scf
  ret
  


menu_prgm_0:
  .db 20
  .db $CE,$00       ;If
  .db $CF,$00       ;Then
  .db $D0,$00       ;Else
  .db $D3,$00       ;For(
  .db $D1,$00       ;While
  .db $D2,$00       ;Repeat
  .db $D4,$00       ;End
  .db $D8,$00       ;Pause
  .db $D6,$00       ;Lbl
  .db $D7,$00       ;Goto
  .db $DA,$00       ;IS>(
  .db $DB,$00       ;DS<(
  .db $E6,$00       ;Menu(
  .db $5F,$00       ;prgm
  .db $D5,$00       ;Return
  .db $D9,$00       ;Stop
  .db $BB,$54,$00   ;DelVar
  .db $BB,$45,$00   ;GraphStyle(
  .db $EF,$11,$00   ;OpenLib(
  .db $EF,$12,$00   ;ExecLib
menu_prgm_1:
  .db 12
  .db $DC,$00       ;Input
  .db $DD,$00       ;Prompt
  .db $DE,$00       ;Disp
  .db $DF,$00       ;DispGraph
  .db $E5,$00       ;DispTable
  .db $E0,$00       ;Output(
  .db $AD,$00       ;getKey
  .db $E1,$00       ;ClrHome
  .db $FB,$00       ;ClrTable
  .db $BB,$53,$00   ;GetCalc(
  .db $E8,$00       ;Get(
  .db $E7,$00       ;Send(
;menu_prgm_2:
;  .db 0           ;Number of programs will go here
;  .db             ;List VAT Entries of Programs
